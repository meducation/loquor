{"name":"Loquor","tagline":"An ActiveRecord-style restful API accessor","body":"# Loquor\r\n\r\n[![Build Status](https://travis-ci.org/meducation/loquor.png)](https://travis-ci.org/meducation/loquor)\r\n[![Dependencies](https://gemnasium.com/meducation/loquor.png?travis)](https://gemnasium.com/meducation/loquor)\r\n[![Code Climate](https://codeclimate.com/github/meducation/loquor.png)](https://codeclimate.com/github/meducation/loquor)\r\n\r\nLoquor handles calls to an API via an ActiveRecord-style interface. It is currently configured for the Meducation API but could easily be changed for any other API. It allows you to access show/index/update/create actions with simple calls like `MediaFile.find(8)`, without having to worry about HTTP, JSON or anything else.\r\n\r\n## Installation\r\n\r\nAdd this line to your application's Gemfile:\r\n\r\n```ruby\r\ngem 'loquor'\r\n```\r\n\r\nAnd then execute:\r\n\r\n    $ bundle\r\n\r\n## Usage\r\n\r\nTo get going, you will want to set up some configuration variables.\r\n``` ruby\r\nLoquor.config do |config|\r\n  config.access_id  = \"Username\"\r\n  config.secret_key = \"SecretKey1929292\"\r\n  config.endpoint   = \"http://www.meducation.net\"\r\n  config.substitute_values[true]  = \":__true__\"\r\n  config.substitute_values[false] = \":__false__\"\r\nend\r\n```\r\n\r\nIf you're not using this for Meducation, then edit the [mappings here](https://github.com/meducation/loquor/blob/master/lib/loquor.rb#L16).\r\n\r\nNow you can make requests to get, create, update, destroy and list a range of objects, likein the same way you would interactive with an ActiveREcord object.\r\n\r\nFor example, you can get search objects using where:\r\n\r\n```ruby\r\nitems = Loquor::User.where(email: \"jeremy@meducation.net\").where(name: \"Jeremy\")\r\n# => [{id: 2, name: \"Jeremy Walker\"}, {id: 3, name: \"Malcolm Landon\"}]\r\n```\r\n\r\nItems responds to all the enumeration methods on Array. e.g.\r\n\r\n```ruby\r\nitems.each do |user|\r\n  p \"The user with id ##{user['id']} is #{user['name']}.\"\r\nend\r\n```\r\n\r\nThe returned objects can be accessed as hashes (using either strings or symbols), or using dot notaton. e.g.:\r\n\r\n```ruby\r\nuser = User.where(foo: 'bar').first\r\nuser.name\r\nuser['name']\r\nuser[:name]\r\n```\r\n\r\nYou can use `select` (for api calls that support it), which specifies which fields to return.\r\n\r\n```ruby\r\nitems = Loquor::User.select([:id, :name])\r\n# => [{id: 2, name: \"Jeremy Walker\"}, {id: 3, name: \"Malcolm Landon\"}]\r\n```\r\nYou can use `find` and `find_each` (which sends requests to the API in batches of 200)\r\n```ruby\r\nLoquor::User.find(2) # => {id: 2, name: \"Jeremy Walker\"}\r\nLoquor::User.find_each do |user|\r\n  # ...\r\nend\r\n```\r\n\r\nYou can also create users using the normal ActiveRecord method:\r\n```ruby\r\nLoquor::User.create(name: \"Jeremy Walker\", email: \"jeremy@meducation.net\") # => {id: 2, name: \"Jeremy Walker\", email \"jeremy@meducation.net\"}\r\n```\r\n\r\n### Is it any good?\r\n\r\n[Yes.](http://news.ycombinator.com/item?id=3067434)\r\n\r\n## Contributing\r\n\r\nFirstly, thank you!! :heart::sparkling_heart::heart:\r\n\r\nWe'd love to have you involved. Please read our [contributing guide](https://github.com/meducation/loquor/tree/master/CONTRIBUTING.md) for information on how to get stuck in.\r\n\r\n### Contributors\r\n\r\nThis project is managed by the [Meducation team](http://company.meducation.net/about#team). \r\n\r\nThese individuals have come up with the ideas and written the code that made this possible:\r\n\r\n- [Jeremy Walker](http://github.com/iHiD)\r\n- [Malcolm Landon](http://github.com/malcyL)\r\n- [Charles Care](http://github.com/ccare)\r\n- [Rob Styles](http://github.com/mmmmmrob)\r\n\r\n## Licence\r\n\r\nCopyright (C) 2013 New Media Education Ltd\r\n\r\nThis program is free software: you can redistribute it and/or modify\r\nit under the terms of the GNU Affero General Public License as published by\r\nthe Free Software Foundation, either version 3 of the License, or\r\n(at your option) any later version.\r\n\r\nThis program is distributed in the hope that it will be useful,\r\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\r\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\nGNU Affero General Public License for more details.\r\n\r\nA copy of the GNU Affero General Public License is available in [Licence.md](https://github.com/meducation/loquor/blob/master/LICENCE.md)\r\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}